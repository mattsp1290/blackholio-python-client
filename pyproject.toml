[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "blackholio-client"
version = "0.1.0"
description = "Shared SpacetimeDB client for Blackholio game projects"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Elite Engineering Team", email = "engineering@blackholio.com"}
]
maintainers = [
    {name = "Elite Engineering Team", email = "engineering@blackholio.com"}
]
keywords = [
    "spacetimedb",
    "game",
    "client",
    "blackholio",
    "multiplayer",
    "websocket"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking"
]
requires-python = ">=3.8"
dependencies = [
    "websockets>=10.0",
    "aiohttp>=3.8.0",
    "pydantic>=1.10.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
    "cryptography>=3.0.0",
    "jsonschema>=4.0.0",
    "python-dotenv>=0.19.0",
    # Modernized SpacetimeDB SDK (local development version)
    "spacetimedb-sdk @ git+https://github.com/mattsp1290/spacetimedb-python-sdk.git",
    # "spacetimedb-sdk @ file:///Users/punk1290/git/spacetimedb-python-sdk"
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    # Code formatting
    "black>=23.7.0",
    "isort>=5.12.0",
    # Linting
    "flake8>=6.1.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.7.0",
    "flake8-comprehensions>=3.14.0",
    "flake8-simplify>=0.20.0",
    # Type checking
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
    "types-setuptools>=68.0.0",
    # Documentation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    # Development tools
    "pre-commit>=3.3.0",
    "ipython>=8.14.0",
    "ipdb>=0.13.0",
    # Build tools
    "build>=0.10.0",
    "twine>=4.0.0",
    "wheel>=0.41.0",
    # Code quality
    "coverage[toml]>=7.3.0",
    "pylint>=2.17.0",
    "bandit[toml]>=1.7.0",
    "ruff>=0.0.291",
    # Performance profiling
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.0",
    # Dependency management
    "pip-tools>=7.3.0",
    "pipdeptree>=2.13.0"
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0"
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=0.18.0"
]
performance = [
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.0"
]
all = [
    "blackholio-client[dev,test,docs,performance]"
]

[project.urls]
Homepage = "https://github.com/blackholio/blackholio-python-client"
Documentation = "https://blackholio-python-client.readthedocs.io/"
Repository = "https://github.com/blackholio/blackholio-python-client.git"
Issues = "https://github.com/blackholio/blackholio-python-client/issues"
Changelog = "https://github.com/blackholio/blackholio-python-client/blob/main/CHANGELOG.md"

# No CLI entry points - this is a library package
# [project.scripts]
# blackholio-client = "blackholio_client.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["blackholio_client*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
blackholio_client = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "websockets.*",
    "aiohttp.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=blackholio_client",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests"
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit configuration
[tool.bandit]
targets = ["src"]
skips = ["B101", "B601"]  # Skip assert_used and paramiko tests
exclude_dirs = ["tests", "venv", ".venv"]

# Pylint configuration
[tool.pylint.messages_control]
max-line-length = 100
disable = [
    "C0103",  # Invalid name
    "C0111",  # Missing docstring
    "C0301",  # Line too long (handled by black)
    "W0511",  # TODO/FIXME/XXX
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
    "R0914",  # Too many local variables
]

[tool.pylint.design]
max-args = 7
max-locals = 15
max-returns = 6
max-branches = 12
max-statements = 50
max-parents = 7
max-attributes = 10
min-public-methods = 1
max-public-methods = 20

[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = true
ignore-docstrings = true
ignore-imports = true

# Ruff configuration (modern Python linter)
[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "PTH",  # flake8-use-pathlib
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
    "B905",  # `zip()` without an explicit `strict=` parameter
]
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".mypy_cache",
    ".pytest_cache",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["S101", "S102", "S106"]

# Commitizen configuration for conventional commits
[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$major.$minor.$patch"
version = "0.1.0"
version_files = [
    "pyproject.toml:version",
    "src/blackholio_client/__init__.py:__version__"
]
update_changelog_on_bump = true

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml yet)
