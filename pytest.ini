[pytest]
# Pytest configuration for blackholio-python-client

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=src/blackholio_client
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=20
    --maxfail=3
    --disable-warnings
    -p no:warnings
    --durations=10

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests requiring real SpacetimeDB servers
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests
    server_rust: marks tests that require Rust server
    server_python: marks tests that require Python server
    server_csharp: marks tests that require C# server
    server_go: marks tests that require Go server
    server_required: marks tests that require any running SpacetimeDB server
    real_server: marks tests that use real server connections
    protocol_test: marks tests that validate protocol adapters
    performance: marks tests as performance/benchmark tests
    benchmark: marks tests as benchmark tests
    load_test: marks tests as load/stress tests
    memory_test: marks tests that measure memory usage
    quick_perf: marks tests as quick performance tests for development
    critical_perf: marks tests as critical performance tests that must pass
    ci: marks tests that should run in CI environment
    ci_quick: marks tests for quick CI validation
    ci_full: marks tests for full CI validation
    docker: marks tests that require Docker environment
    security: marks tests related to security validation

# Coverage configuration
[coverage:run]
source = src/blackholio_client
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml